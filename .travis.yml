language: java
jdk:
  - openjdk8

# Travis CI를 어느 브랜치가 푸시 될 때 수행할지 설정
# 현재 옵션은 오직 master 브랜치에 push 될 때만 수행
branches:
  only:
    - master

# Travis CI 서버의 Home
# gradle을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여 같은 의존성은 다음 배포 때부터 다시 받지 않도록 함
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master 브랜치에 푸시 되었을 때 수행하는 명령
# 여기서는 프로젝트 내부의 gradlew를 통해 clean & build 를 수행
script: "./gradlew clean build"

# deploy 명령어가 실행 되기 전에 수행
# AWS Code Deploy는 Jar 파일은 인식하지 못하므로 Jar + 기타 설정 파일들을 모아 압축
before_deploy:
  # 현재 위치의 모든 파일을 aws-spring-book 이름으로 압축
  - zip -r aws-spring-book *
  - mkdir -p deploy
  - mv aws-spring-book.zip deploy/aws-spring-book.zip

# S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정 된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo setting에 설정 된 값
    bucket: jojoldu-freelec-springboot-build # s3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    # before_deploy에서 생성한 디렉토리
    # 해당 위치의 파일들만 S3로 전송
    local_dir : deploy
    wait-until-deployed: true
  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정 된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo setting에 설정 된 값
    bucket: jojoldu-freelec-springboot-build # s3 버킷
    key: aws-spring-book.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip # 압축 확장자
    application: freelec-springboot-webservice # AWS 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: freelec-springboot-webservice-group # AWS 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람
# Travis CI 실행 완료 시 자동으로 알람이 가도록 설정
notifications:
  email:
    recipients:
      - junghyen2003@gmail.com