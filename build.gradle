buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    //전역 변수를 생성하고 값을 2.1.7.RELEASE 로 지정
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//apply plugin: 'java'
//apply plugin: 'eclipse'
//apply plugin: 'org.springframework.boot'
//아래와 같이 변경 가능

plugins {
    id 'java'
    // 버전을 반드시 명시?
    id 'org.springframework.boot' version "${springBootVersion}"
}

apply plugin: 'io.spring.dependency-management'
// Spring Boot 버전에 따라서 의존성들을 자동으로 관리

group 'jojoldu.book'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

// 프로젝트 개발에 필요한 의존성을 선언
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // 버전을 명시하지 않아야 classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 에 명시한 버전을 따라가게 됨
    // 이렇게 관리 할 경우 각 라이브러리들의 버전 관리가 한 곳에 집중되고 버전 충돌 문제도 해결됨

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // 스프링 부트용 Spring Data Jpa 추상화 라이브러리
    // 스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전을 관리

    implementation 'com.h2database:h2'
    // 인메모리 관계형 데이터베이스
    // 별도의 설치가 필요 없이 프로젝트 의존성만으로 관리 할 수 있음
    // 메모리에서 실행되기 때문에 애플리케이션을 재시작할때마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // lombok annotation 사용
    // todo annotationProcessor 의 의미에 대해 다시 파악 할 것

    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    // 머스테치 스타터 의존성

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // 스프링 시큐리티 관련 의존성

    testImplementation 'org.springframework.security:spring-security-test'
    // 스프링 시큐리티 테스트를 위한 여러 도구를 지원하는 의존성

    implementation 'org.springframework.session:spring-session-jdbc'
    // 데이터베이스를 세션 저장소로 사용하는 의존성
}
